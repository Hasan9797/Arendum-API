generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  fullName  String @map("full_name")
  phone     String @unique
  role      Int    @default(1)
  login     String @unique
  password  String
  createdAt Int    @default(0) @map("created_at")
  updatedAt Int    @default(0) @map("updated_at")
}

model Driver {
  id                      Int    @id @default(autoincrement())
  fullName                String @map("full_name")
  phone                   String @unique
  merchantId              Int?   @map("merchant_id")
  photoTexPassport        Json   @default("[]") @map("photo_tex_passport")
  photoPassport           Json   @default("[]") @map("photo_passport")
  photoLicense            Json   @default("[]") @map("photo_license")
  photoConfidencePassport Json   @default("[]") @map("photo_confidence_passport")
  photoDriverLicense      Json   @default("[]") @map("photo_driver_license")
  createdAt               Int    @default(0) @map("created_at")
  updatedAt               Int    @default(0) @map("updated_at")
}

model Client {
  id        Int     @id @default(autoincrement())
  fullName  String  @map("full_name")
  phone     String  @unique
  legal     Boolean @default(false)
  createdAt Int     @default(0) @map("created_at")
  updatedAt Int     @default(0) @map("updated_at")
}

model Machines {
  id                   Int                    @id @default(autoincrement())
  title                String
  img                  String
  machineParams        MachineParams[]
  machineParamsFilters MachineParamsFilters[]
  createdAt            Int                    @default(0) @map("created_at")
  updatedAt            Int                    @default(0) @map("updated_at")
}

model MachineParams {
  id        Int      @id @default(autoincrement())
  name      String
  machineId Int      @map("machine_id")
  machines  Machines @relation(fields: [machineId], references: [id])
  params    Json     @default("[]")
  createdAt Int      @default(0) @map("created_at")
  updatedAt Int      @default(0) @map("updated_at")
}

model MachineParamsFilters {
  id           Int      @id @default(autoincrement())
  machineId    Int      @map("machine_id")
  machines     Machines @relation(fields: [machineId], references: [id])
  filterParams Json     @default("[]") @map("filter_params")
  createdAt    Int      @default(0) @map("created_at")
  updatedAt    Int      @default(0) @map("updated_at")
}

model BankCard {
  id        Int    @id @default(autoincrement())
  name      String
  expire    String
  userId    Int    @map("user_id")
  createdAt Int    @default(0) @map("created_at")
  updatedAt Int    @default(0) @map("updated_at")
}

model UserToken {
  id        Int    @id @default(autoincrement())
  token     String
  expire    String
  userId    Int    @map("user_id")
  createdAt Int    @default(0) @map("created_at")
  updatedAt Int    @default(0) @map("updated_at")
}

model Merchant {
  id        Int     @id @default(autoincrement())
  fullName  String  @map("full_name")
  phone     String  @unique
  legal     Boolean @default(false)
  createdAt Int     @default(0) @map("created_at")
  updatedAt Int     @default(0) @map("updated_at")
}
